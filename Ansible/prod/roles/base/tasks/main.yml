- name: install yum prerequisites
  package:
    name:
      - yum-utils
    update_cache: yes
  when: ansible_distribution == "OracleLinux"

- name: adding docker repo
  shell: "yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo"
  changed_when: false
  when: ansible_distribution == "OracleLinux"

- name: allow APT to use a repository over HTTPS
  package:
    name:
      - ca-certificates
      - curl
      - gnupg
  changed_when: false
  when: ansible_distribution == "Ubuntu"

- name: add Docker’s official GPG key 1
  shell: "install -m 0755 -d /etc/apt/keyrings"
  changed_when: false
  when: ansible_distribution == "Ubuntu"

- name: add Docker’s official GPG key 2
  shell: "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg"
  changed_when: false
  when: ansible_distribution == "Ubuntu"

- name: add Docker’s official GPG key 3
  shell: "chmod a+r /etc/apt/keyrings/docker.gpg"
  changed_when: false
  when: ansible_distribution == "Ubuntu"

- name: set up the repository
  shell: "echo \"deb [arch=\"$(dpkg --print-architecture)\" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \"$(. /etc/os-release && echo \"$VERSION_CODENAME\")\" stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null"
  changed_when: false
  when: ansible_distribution == "Ubuntu"

- name: installing docker
  tags: docker
  package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin
    update_cache: yes

- name: start docker service (RHEL (OracleLinux) or CentOS)
  tags: docker,centos,rhel
  service:
    name: docker
    state: started
    enabled: yes
  when: ansible_distribution == "OracleLinux"

- name: add user permissions
  tags: docker
  shell: "usermod -aG docker {{ user }}"

- name: Reset ssh connection for changes to take effect
  tags: docker
  meta: "reset_connection"

- name: install python package manager
  package:
    name: python3-pip

- name: install python sdk
  become_user: "{{ ansible_env.USER }}"
  pip:
    name:
      - docker
      - docker-compose